digraph "G" {
    graph ["rankdir"="LR",];
    node ["URL"="javascript:alert('\T');","color"="grey90","style"="filled",];
    edge ["color"="gray70",];
    "config-init";
    "autobuild";
    "autobuild" -> "cleandb-allTests";
    "autobuild" -> "tomcat-remove" ["label"="antcall","fontcolor"="gray70","fontsize"="9",];
    "clean";
    "clean" -> "clean-retrieved-libs";
    "retrieve-libs";
    "clean-retrieved-libs";
    "init";
    "init" -> "config-init";
    "init" -> "retrieve-libs";
    "compile" ["color"="pink",];
    "compile" -> "init";
    "compile" -> "retrieve-libs";
    "compile" -> "-copy-resources";
    "fix-version";
    "fix-version" -> "retrieve-libs";
    "-copy-resources";
    "-enable-test-mode";
    "tests";
    "tests" -> "-enable-test-mode";
    "tests" -> "checkstyle";
    "tests" -> "check-properties-file";
    "tests" -> "-unitTests";
    "tests" -> "junit-report-all";
    "tests" -> "-print-timestamp";
    "unitTests";
    "unitTests" -> "-unit-testpat";
    "unitTests" -> "tests";
    "contextAwareTests";
    "contextAwareTests" -> "-set-spring-testpat";
    "contextAwareTests" -> "tests";
    "-set-spring-testpat";
    "-unit-testpat";
    "cleandb-contextAwareTests";
    "cleandb-contextAwareTests" -> "-set-spring-testpat";
    "cleandb-contextAwareTests" -> "-enable-test-mode";
    "cleandb-contextAwareTests" -> "clean";
    "cleandb-contextAwareTests" -> "rebuild-databases";
    "cleandb-contextAwareTests" -> "tests";
    "copyTomcatJars";
    "copyTomcatJars" -> "init";
    "integrationTestsNoDeploy";
    "integrationTestsNoDeploy" -> "-enable-test-mode";
    "integrationTestsNoDeploy" -> "qa-check-jsp";
    "integrationTestsNoDeploy" -> "-internalIntegrationTests";
    "integrationTests";
    "integrationTests" -> "-enable-test-mode";
    "integrationTests" -> "qa-check-jsp";
    "integrationTests" -> "-internalIntegrationTestsWithWar";
    "-internalIntegrationTestsWithWar";
    "-internalIntegrationTestsWithWar" -> "-compile-integration";
    "-internalIntegrationTestsWithWar" -> "-import-database";
    "-internalIntegrationTestsWithWar" -> "war";
    "-internalIntegrationTestsWithWar" -> "-internalIntegrationTests";
    "-make-integration-config";
    "-make-integration-config" -> "-make-config";
    "-internalIntegrationTests";
    "-internalIntegrationTests" -> "-compile-integration";
    "-internalIntegrationTests" -> "-import-database";
    "-internalIntegrationTests" -> "-internalClassicIntegrationTests";
    "-internalIntegrationTests" -> "junit-report-integration";
    "-internalClassicIntegrationTests";
    "-compile-integration";
    "-compile-integration" -> "compile";
    "-compile-integration" -> "compile-tests";
    "-compile-integration" -> "-make-integration-config";
    "make-test-config";
    "make-test-config" -> "-enable-test-mode";
    "make-test-config" -> "-make-config";
    "make-test-config" -> "-copy-resources";
    "-unitTests";
    "-unitTests" -> "compile-tests";
    "largeTests";
    "largeTests" -> "-enable-test-mode";
    "largeTests" -> "checkstyle";
    "largeTests" -> "check-properties-file";
    "largeTests" -> "-largeTests";
    "largeTests" -> "junit-report-all";
    "largeTests" -> "-print-timestamp";
    "-largeTests";
    "-largeTests" -> "compile-tests";
    "-cuke-testpat";
    "cukeTests";
    "cukeTests" -> "-cuke-testpat";
    "cukeTests" -> "-enable-test-mode";
    "cukeTests" -> "make-test-config";
    "cukeTests" -> "war";
    "cukeTests" -> "largeTests";
    "cukeTests-nodeploy";
    "cukeTests-nodeploy" -> "-cuke-testpat";
    "cukeTests-nodeploy" -> "-enable-test-mode";
    "cukeTests-nodeploy" -> "make-test-config";
    "cukeTests-nodeploy" -> "largeTests";
    "cleanCukeTests";
    "cleanCukeTests" -> "clean";
    "cleanCukeTests" -> "-cuke-testpat";
    "cleanCukeTests" -> "-enable-test-mode";
    "cleanCukeTests" -> "rebuild-database";
    "cleanCukeTests" -> "-enable-export";
    "cleanCukeTests" -> "-export-database";
    "cleanCukeTests" -> "cukeTests";
    "-isCheckstyleNeeded";
    "checkstyle";
    "checkstyle" -> "init";
    "checkstyle" -> "-isCheckstyleNeeded";
    "checkstyle" -> "check-eol" ["label"="antcall","fontcolor"="gray70","fontsize"="9",];
    "checkstyle" -> "-do-checkstyle" ["label"="antcall","fontcolor"="gray70","fontsize"="9",];
    "-do-checkstyle";
    "findbugs";
    "findbugs" -> "compile";
    "findbugs-include-xml";
    "findbugs-include-xml" -> "compile";
    "check-eol";
    "ordainUser";
    "ordainUser" -> "init";
    "copy-test-files";
    "copy-test-files" -> "init";
    "compile-tests";
    "compile-tests" -> "-enable-test-mode";
    "compile-tests" -> "compile";
    "compile-tests" -> "";
    "compile-tests" -> "-make-config";
    "mutate";
    "mutate" -> "-enable-test-mode";
    "mutate" -> "init";
    "mutate" -> "compile-tests";
    "mutateAll";
    "mutateAll" -> "-enable-test-mode";
    "mutateAll" -> "init";
    "mutateAll" -> "compile-tests";
    "makeAssets";
    "makeAssets" -> "-asset-loc";
    "makeAssets" -> "-compressJS";
    "-make-config";
    "-make-config" -> "init";
    "-make-config" -> "-vcs-version";
    "-make-config" -> "-asset-loc";
    "javadoc";
    "javadoc" -> "init";
    "generate-rest-api-docs";
    "generate-rest-api-docs" -> "compile";
    "javadoc-test";
    "javadoc-test" -> "compile";
    "testJsp";
    "testJsp" -> "-enable-test-mode";
    "testJsp" -> "-test-jsp";
    "-test-jsp";
    "-test-jsp" -> "makeWar";
    "-test-jsp" -> "compile-jsp";
    "compile-jsp";
    "compile-jsp" -> "-compile-jsp-outer";
    "-compile-jsp-outer";
    "-compile-jsp-outer" -> "-enable-test-mode";
    "-compile-jsp-outer" -> "-compile-jsp";
    "-compile-jsp";
    "-compile-jsp" -> "init";
    "qa-check-jsp";
    "qa-check-jsp" -> "init";
    "create-genres";
    "create-genres" -> "init";
    "create-genres" -> "compile";
    "create-genres" -> "-make-config";
    "junit-report-all";
    "report";
    "junit-report-integration";
    "patch-database";
    "patch-database" -> "-patch-both-database" ["label"="antcall","fontcolor"="gray70","fontsize"="9",];
    "-patch-database";
    "-patch-database" -> "init";
    "-patch-database" -> "compile";
    "-patch-database" -> "-make-config";
    "-patch-extras-database";
    "-patch-extras-database" -> "init";
    "-patch-extras-database" -> "compile";
    "-patch-extras-database" -> "-make-config";
    "-patch-both-database";
    "-patch-both-database" -> "-patch-database";
    "-patch-both-database" -> "-patch-extras-database";
    "drop-database";
    "drop-database" -> "init";
    "drop-database" -> "compile";
    "drop-extras-database";
    "drop-extras-database" -> "init";
    "create-database";
    "create-database" -> "-patch-database";
    "create-database" -> "check-fk-indexes";
    "-export-database";
    "-export-database" -> "init";
    "-import-database";
    "-import-database" -> "init";
    "rebuild-database";
    "rebuild-database" -> "drop-database";
    "rebuild-database" -> "create-database";
    "rebuild-extras-database";
    "rebuild-extras-database" -> "drop-extras-database";
    "rebuild-extras-database" -> "-patch-extras-database";
    "rebuild-databases";
    "rebuild-databases" -> "rebuild-database";
    "rebuild-databases" -> "rebuild-extras-database";
    "rebuild-databases" -> "-export-database";
    "run-sql-statement";
    "check-fk-indexes";
    "check-fk-indexes" -> "init";
    "check-fk-indexes" -> "compile";
    "-enable-export";
    "cleandb-allTests";
    "cleandb-allTests" -> "-enable-test-mode";
    "cleandb-allTests" -> "-enable-export";
    "cleandb-allTests" -> "cleandb-test";
    "cleandb-allTests" -> "integrationTests";
    "cleandb-allTests" -> "testJsp";
    "cleandb-test";
    "cleandb-test" -> "-enable-test-mode";
    "cleandb-test" -> "clean";
    "cleandb-test" -> "db-test";
    "cleandb-test" -> "report";
    "clean-unitTest";
    "clean-unitTest" -> "-enable-test-mode";
    "clean-unitTest" -> "clean";
    "clean-unitTest" -> "checkstyle";
    "clean-unitTest" -> "unitTests";
    "clean-unitTest" -> "junit-report-all";
    "db-test";
    "db-test" -> "-enable-test-mode";
    "db-test" -> "rebuild-databases";
    "db-test" -> "tests";
    "-print-timestamp";
    "war";
    "war" -> "makeWar";
    "war" -> "tomcat-remove";
    "war" -> "tomcat-restart";
    "war" -> "tomcat-install";
    "war" -> "-print-timestamp";
    "-compressJS_dep";
    "-compressJS";
    "-compressJS" -> "init";
    "-compressJS" -> "-compressJS_dep";
    "compressJS";
    "compressJS" -> "-compressJS";
    "makeWar";
    "makeWar" -> "compile";
    "makeWar" -> "makeAssets";
    "makeWar" -> "-make-config";
    "makeWar" -> "-compressJS";
    "makeWar" -> "-vcs-version";
    "copyWebPages";
    "copyWebPages" -> "init";
    "copyWebPages" -> "-compressJS";
    "copyWebPages" -> "-make-config";
    "tomcat-install";
    "tomcat-install" -> "init";
    "tomcat-remove";
    "tomcat-remove" -> "init";
    "tomcat-reload";
    "tomcat-reload" -> "init";
    "tomcat-start";
    "tomcat-start" -> "init";
    "tomcat-stop";
    "tomcat-stop" -> "init";
    "tomcat-list";
    "tomcat-restart";
    "tomcat-restart" -> "-tomcat-restart-check";
    "jetty-restart";
    "jetty-restart" -> "-jetty-restart-check";
    "-tomcat-restart-check";
    "-jetty-restart-check";
    "anyScript";
    "anyScript" -> "init";
    "anyScript" -> "compile";
    "anyScript" -> "-make-config";
    "anyTestScript";
    "anyTestScript" -> "init";
    "anyTestScript" -> "compile-tests";
    "anyTestScript" -> "-make-config";
    "my-script";
    "my-script" -> "init";
    "my-script" -> "compile";
    "my-script" -> "-make-config";
    "re-index";
    "re-index" -> "init";
    "re-index" -> "compile";
    "re-index" -> "-make-config";
    "replay-log";
    "replay-log" -> "init";
    "replay-log" -> "compile";
    "replay-log" -> "-make-config";
    "replay-log-search-test";
    "replay-log-search-test" -> "init";
    "replay-log-search-test" -> "compile";
    "replay-log-search-test" -> "-make-config";
    "vcs-version";
    "vcs-version" -> "-vcs-version";
    "-vcs-version";
    "-vcs-version" -> "-git-version";
    "-git-version";
    "-asset-loc";
    "-asset-loc" -> "-vcs-version";
    "-asset-loc" -> "init";
    "check-properties-file";
    "doDataLoaderConfig";
    "doDataLoaderConfig" -> "-make-config";
    "oauthMacSignature";
    "oauthMacSignature" -> "compile";
    "intellij-setup";
}
